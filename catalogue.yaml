- name: configure catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable current module nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable required module nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install NodeJS
    ansible.builtin.dnf:
      name: nodejs
      state: present
  
  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app
  
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: Download the application code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip
  
  # This module thinks file exists on ansible control server, needs to extract on to remote machine(catalogue)
  # remote_src: yes means file already exits in catalogue server
  - name: extract the code 
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy catalogue service to sysem directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
  
  - name: Start & Enable catalogue Service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copying MongoDB repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install MongoDB client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: Load products data
    ansible.builtin.shell: >
      mongosh --host mongodb.daws2025.online < /app/db/master-data.js

  - name: Get index of catalogue DB
    ansible.builtin.shell: >
      mongosh --host mongodb.daws2025.online --quiet --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_db_check

  - name: Show products count
    ansible.builtin.debug:
      msg: "Number of products loaded: {{ catalogue_db_check }}"

  - name: Show only stdout (normal output of the command)
    ansible.builtin.debug:
      msg: "stdout: {{ catalogue_db_check.stdout }}"

  - name: Show stderr (error messages, if any)
    ansible.builtin.debug:
      msg: "stderr: {{ catalogue_db_check.stderr }}"

  - name: Show return code (0 = success, non-zero = failure)
    ansible.builtin.debug:
      msg: "Return code (rc): {{ catalogue_db_check.rc }}"