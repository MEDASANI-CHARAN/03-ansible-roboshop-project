- name: configure shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: install maven
    ansible.builtin.dnf:
      name: maven 
      state: installed
  
  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app
  
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: Download the application code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip
  
  # This module thinks file exists on ansible control server, needs to extract on to remote machine(shipping)
  # remote_src: yes means file already exits in shipping server
  - name: extract the code 
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install maven dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app
  
  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
    args:
      chdir: /app

  - name: copy shipping service to sysem directory
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  
  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
  
  - name: Start & Enable shipping Service
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes
  
  - name: install MySQL client
    ansible.builtin.dnf:
      name: mysql-server
      state: present

  # - name: Check if catalogue database exists
  #   ansible.builtin.shell: |
  #     mysql -h mysql.daws2025.online -uroot -pRoboShop@1 -e "SHOW DATABASES LIKE 'catalogue';" 
  #   register: mysql_db_check
  #   ignore_errors: yes
  #   changed_when: false

  # - name: Show database check result
  #   ansible.builtin.debug:
  #     msg: "Database check result: {{ mysql_db_check.rc }} (0 means DB exists, non-zero means not exists)"

  - name: Load schema, app-user, and master-data SQL scripts if DB not exists
    ansible.builtin.shell: |
      mysql -h mysql.daws2025.online -uroot -pRoboShop@1 < /app/db/schema.sql
      mysql -h mysql.daws2025.online -uroot -pRoboShop@1 < /app/db/app-user.sql
      mysql -h mysql.daws2025.online -uroot -pRoboShop@1 < /app/db/master-data.sql
    # when: mysql_db_check.rc != 0
  
  - name: restart shipping Service
    ansible.builtin.service:
      name: shipping
      state: restarted